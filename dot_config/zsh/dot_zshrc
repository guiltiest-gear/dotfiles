#!/bin/zsh
# Enable colors and change prompt:
autoload -U colors && colors

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

### Export
export HISTORY_IGNORE="(ls|la|ll|cd|pwd|exit|x|sdn|rbn|history|cd -|cd ..|..|...|cl|clear)"
export HISTCONTROL=ignoredups:erasedups
export FZF_DEFAULT_OPTS="--no-mouse --color=dark --cycle --tiebreak=chunk \
  --color=fg:#c0caf5,bg:#1a1b26,hl:#ff9e64 \
  --color=fg+:#c0caf5,bg+:#292e42,hl+:#ff9e64 \
  --color=info:#7aa2f7,prompt:#7dcfff,pointer:#7dcfff \
  --color=marker:#9ece6a,spinner:#9ece6a,header:#9ece6a"
export FZF_DEFAULT_COMMAND='rg --files --hidden --smart-case --glob "!.git/*"'
export ZSH_AUTOSUGGEST_STRATEGY=(completion)
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#7f7d9c"
export _ZO_EXCLUDE_DIRS="/tmp:/tmp/*:$HOME/Downloads/*:$HOME/Games/*:$HOME/Music/*:$HOME/Documents/*:$HOME/Pictures/*:\
  $HOME/Videos/*:/run/*:$HOME/.local/share/nvim/*:$HOME/.local/state/nvim/*:$HOME/.local/share/chezmoi/*:\
  $HOME/Downloads:/mnt/*"
export GPG_TTY=$(tty)
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME"/npm/npmrc

# Use bat as manpager
export MANPAGER="sh -c 'col -bx | bat -l man -p'"

# Fix formatting for manpager
export MANROFFOPT="-c"

# I like my history larger like this
export HISTFILE="$XDG_STATE_HOME"/zsh/history
export HISTSIZE=10000
export SAVEHIST=10000

# Various options
setopt ALIASES
setopt COMPLETE_ALIASES
setopt GLOB_DOTS
setopt interactive_comments
setopt APPEND_HISTORY
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_FIND_NO_DUPS
setopt HIST_SAVE_NO_DUPS
setopt HIST_EXPIRE_DUPS_FIRST

# vi mode
# NOTE: Keep this here in case we don't have zsh-vi-mode installed
bindkey -v

# NOTE: This is here so that the fzf zsh keybindings work properly after enhanced zsh vi mode init
zvm_after_init() {
    eval "$(fzf --zsh)"
}

# Use quick escape for getting to normal mode
zvm_config() {
    ZVM_VI_INSERT_ESCAPE_BINDKEY=jk
}

# Use fd to list path candidates
_fzf_compgen_path() {
    fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
    fd --type d --hidden --follow --exclude ".git" . "$1"
}

# Basic auto/tab complete
autoload -Uz compinit
compinit
_comp_options+=(globdots)
zstyle ':completion:*' menu select
zmodload zsh/complist

# Ignore case completion
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' '+m:{A-Z}={a-z}'

# Use vi navigation keys in the menu completion
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history

### extract function
SAVEIFS=$IFS
IFS=$(echo -en "\n\b")

extract() {
    if [ -z "$1" ]; then
        # display usage if no parameters given
        echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
        echo "       extract <path/file_name_1.ext> [path/file_name_2.ext] [path/file_name_3.ext]"
    else
        for n in "$@"; do
            if [ -f "$n" ]; then
                case "${n%,}" in
                    *.cbt | *.tar.bz2 | *.tar.gz | *.tar.xz | *.tbz2 | *.tgz | *.txz | *.tar)
                        tar xvf "$n"
                        ;;
                    *.lzma)
                        unlzma ./"$n"
                        ;;
                    *.bz2)
                        bunzip2 ./"$n"
                        ;;
                    *.cbr | *.rar)
                        unrar x -ad ./"$n"
                        ;;
                    *.gz)
                        gunzip ./"$n"
                        ;;
                    *.cbz | *.epub | *.zip)
                        unzip ./"$n"
                        ;;
                    *.z)
                        uncompress ./"$n"
                        ;;
                    *.7z | *.arj | *.cab | *.cb7 | *.chm | *.deb | *.dmg | *.iso | *.lzh | *.msi | *.pkg | *.rpm | *.udf | *.wim | *.xar)
                        7z x ./"$n"
                        ;;
                    *.xz)
                        unxz ./"$n"
                        ;;
                    *.exe)
                        cabextract ./"$n"
                        ;;
                    *.cpio)
                        cpio -id <./"$n"
                        ;;
                    *.cba | *.ace)
                        unace x ./"$n"
                        ;;
                    *.AppImage | *.appimage)
                        ./"$n" --appimage-extract
                        ;;
                    *)
                        echo "extract: '$n' - unknown archive method"
                        return 1
                        ;;
                esac
            else
                echo "'$n' - file does not exist"
                return 1
            fi
        done
    fi
}

IFS=$SAVEIFS

# Edit line in vim with ctrl-e
autoload edit-command-line
zle -N edit-command-line
bindkey '^e' edit-command-line

# Load in aliases from aliasrc
source "$ZDOTDIR"/aliasrc

# Bash insulter
source /etc/bash.command-not-found

# Random color script
colorscript random

# Load zoxide
eval "$(zoxide init zsh)"

# Starship prompt
eval "$(starship init zsh)"

# Enhanced zsh vi mode
source /usr/share/zsh/plugins/zsh-vi-mode/zsh-vi-mode.plugin.zsh

# Zsh autosuggestions
source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh

# Zsh syntax highlighting (MUST BE PUT AT THE VERY END)
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh 2>/dev/null
