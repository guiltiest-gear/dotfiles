#!/bin/zsh
# Enable colors and change prompt:
autoload -U colors && colors

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

### Export
export HISTORY_IGNORE="(ls|la|ll|cd|pwd|exit|sdn|rbn|history|cd -|cd ..|..|...|cl|clear|z)"
export HISTCONTROL=ignoredups:erasedups
export FZF_DEFAULT_OPTS="--no-mouse --cycle --tiebreak=chunk"
export FZF_DEFAULT_COMMAND='rg --files --hidden --smart-case --glob "!.git/*"'
export ZSH_AUTOSUGGEST_STRATEGY=(completion)
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#7f7d9c"
export _ZO_EXCLUDE_DIRS="/tmp:/tmp/*:$HOME/Downloads/*:$HOME/Music/*:$HOME/Documents/*:$HOME/Pictures/*:\
$HOME/Videos/*:/run/*:$HOME/.local/share/nvim/*:$HOME/.local/state/nvim/*:$HOME/.local/share/chezmoi/*:\
$HOME/.local/share/chezmoi:$HOME/Downloads:$HOME/Desktop:$HOME/Music:$HOME/Documents:$HOME/Pictures:\
$HOME/Videos:$HOME"
export GPG_TTY=$(tty)
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME"/npm/npmrc
export PYTHONSTARTUP="$XDG_CONFIG_HOME"/python/pythonrc

# Use bat as manpager
export MANPAGER="sh -c 'col -bx | bat -l man -p'"

# Fix formatting for manpager
export MANROFFOPT="-c"

# I like my history larger like this
export HISTFILE="$XDG_STATE_HOME"/zsh/history
export HISTSIZE=10000
export SAVEHIST=10000

# Various options
setopt aliases
setopt complete_aliases
setopt glob_dots
setopt interactive_comments
setopt append_history
setopt hist_ignore_dups
setopt hist_ignore_all_dups
setopt hist_ignore_space
setopt hist_find_no_dups
setopt hist_save_no_dups
setopt hist_expire_dups_first
setopt share_history

# vi mode
# NOTE: Keep this here in case we don't have zsh-vi-mode installed
bindkey -v
export KEYTIMEOUT=1

# Function to clear screen with ctrl-l
clear-screen-and-scrollback() {
  printf '\x1Bc'
  zle clear-screen
}

# NOTE: This is here so that the fzf zsh keybindings work properly after enhanced zsh vi mode init
zvm_after_init() {
  source <(fzf --zsh)
  # Edit line in vim with ctrl-e
  autoload -Uz edit-command-line
  zle -N edit-command-line
  bindkey '^E' edit-command-line
  # Clear screen with ctrl-l
  zle -N clear-screen-and-scrollback
  bindkey '^L' clear-screen-and-scrollback
}

# Use quick escape for getting to normal mode
zvm_config() {
  ZVM_VI_INSERT_ESCAPE_BINDKEY=jk
}

# Use fd to list path candidates
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

# Basic auto/tab complete
autoload -U compinit && compinit -u
zstyle ':completion:*' menu select
# Ignore case completion
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
# Set description format for fzf-tab group support
zstyle ':completion:*:descriptions' format '[%d]'
# Switch group using `<` and `>`
zstyle ':fzf-tab:*' switch-group '<' '>'
# Disable sort when completing git checkout
zstyle ':completion:*:git-checkout:*' sort false

zmodload zsh/complist
compinit
# Include hidden files
_comp_options+=(globdots)

# Use vi navigation keys in the menu completion
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history

### extract function
SAVEIFS=$IFS
IFS=$(echo -en "\n\b")

extract() {
  if [ -z "$1" ]; then
    # display usage if no parameters given
    echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
    echo "       extract <path/file_name_1.ext> [path/file_name_2.ext] [path/file_name_3.ext]"
  else
    for n in "$@"; do
      if [ -f "$n" ]; then
        case "${n%,}" in
          *.cbt | *.tar.* | *.tbz2 | *.tgz | *.txz | *.tar)
            tar xvf "$n"
            ;;
          *.lzma)
            unlzma ./"$n"
            ;;
          *.bz2)
            bunzip2 ./"$n"
            ;;
          *.cbr | *.rar)
            unrar x -ad ./"$n"
            ;;
          *.gz)
            gunzip ./"$n"
            ;;
          *.cbz | *.epub | *.zip)
            unzip ./"$n"
            ;;
          *.z)
            uncompress ./"$n"
            ;;
          *.7z | *.arj | *.cab | *.cb7 | *.chm | *.deb | *.dmg | *.iso | *.lzh | *.msi | *.pkg | *.rpm | *.udf | *.wim | *.xar)
            7z x ./"$n"
            ;;
          *.xz)
            unxz ./"$n"
            ;;
          *.exe)
            cabextract ./"$n"
            ;;
          *.cpio)
            cpio -id <./"$n"
            ;;
          *.cba | *.ace)
            unace x ./"$n"
            ;;
          *.AppImage | *.appimage)
            ./"$n" --appimage-extract
            ;;
          *)
            echo "extract: '$n' - unknown archive method"
            return 1
            ;;
        esac
      else
        echo "'$n' - file does not exist"
        return 1
      fi
    done
  fi
}

IFS=$SAVEIFS

# Trap USR1 signals to trigger a rehash
TRAPUSR1() {
  rehash
}

# Load in aliases from aliasrc
source "$ZDOTDIR"/aliasrc

# Insulter
source "$ZDOTDIR"/command-not-found.zsh

# fzf tokyonight colors
source ~/.local/share/nvim/lazy/tokyonight.nvim/extras/fzf/tokyonight_night.sh

# Random color script
colorscript random

# Load zoxide
eval "$(zoxide init zsh)"

# Starship prompt
eval "$(starship init zsh)"

# fzf-tab complete
source /usr/share/zsh/plugins/fzf-tab-git/fzf-tab.plugin.zsh

# Enhanced zsh vi mode
source /usr/share/zsh/plugins/zsh-vi-mode/zsh-vi-mode.plugin.zsh

# git extras
source /usr/share/doc/git-extras/git-extras-completion.zsh

# Zsh autosuggestions
source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh

# Zsh syntax highlighting
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh 2>/dev/null
